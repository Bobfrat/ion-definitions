name: dataset_management

docstring: |
   The Dataset Management Service provides the services to register and manipulate changeable data sets and their
   metadata within the Integrated Observatory

spec: https://confluence.oceanobservatories.org/display/syseng/CIAD+DM+OV+Dataset+Management+Service

dependencies: [resource_registry]

methods:
  create_dataset:
    in:
      name:            ""
      datastore_name:  ""
      view_name:       ""
      stream_id:       ""
      parameter_dict:  {}
      spatial_domain:  {}
      temporal_domain: {}
      description:     ""
    out:
      dataset_id:      ""

  update_dataset:
    in:
      dataset: !DataSet
    out:

  read_dataset:
    # Read the dataset resource including metadata
    in:
      dataset_id: ""
    out:
      dataset: !DataSet
    throws:
      NotFound: if ingestion configuration did not exist

  delete_dataset:
    in:
      dataset_id: ""
    out:
    throws:
      NotFound: if ingestion configuration did not exist

#------------------

  add_stream:
    docstring: Adds a stream to a dataset
    in:
      dataset_id: ""
      stream_id: ""
    out:
  remove_stream:
    docstring: Adds a stream to a dataset
    in:
      dataset_id: ""
      stream_id: ""
    out:
      

  get_dataset_bounds:
    docstring: |
        @brief Get the bounding coordinates of the dataset using a couch map/reduce query
        @param dataset_id
        @result bounds is a dictionary containing spatial and temporal bounds of the dataset in standard units
    in:
      dataset_id: ""
    out:
      bounds: {} # {geo: [latmin, lonmin, latmax, lonmax], height:[min, max], time:[min, max]}

  get_dataset_metadata:
    docstring: |
      @brief Get the metadata for the dataset using a couch map/reduce query
      @param dataset_id
      @result the aggregated available metadata for the specified dataset
    in:
      dataset_id: ""
    out:
      metadata: {} # structure tbd... similar to datastream definition

  #-------------------------
  # Not implemented yet


  find_datasets:
    in:
      filters: !ResourceFilter
    out:
      dataset_list: []

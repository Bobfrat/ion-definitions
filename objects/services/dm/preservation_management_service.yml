name: preservation_management

docstring: |
    Capability to add and manage persistence systems and their datastores (namespaces).
    Includes definition of storage constraints and policies.

spec: https://confluence.oceanobservatories.org/display/syseng/CIAD+DM+OV+Preservation+Management+Service

dependencies: [resource_registry]

methods:


  # ----------------
  # Managing PersistenceSystem resources (such as a database cluster)
  # Calls CEI to execute taskable resource

  create_couch_cluster:
      docstring: |
        Create an PersistenceSystem resource describing a couch cluster.
      in:
        name: ""
        description: ""
        replicas: 1    # default number of replicas
        partitions: 1  # default number of partitions
      out:
        persistence_system_id: ""
      throws:

  create_elastic_search_cluster:
      docstring: |
        Create an PersistenceSystem resource describing a couch cluster.
      in:
        name: ""
        description: ""
        replicas: 1    # default number of replicas
        shards: 1  # default number of shards
      out:
        persistence_system_id: ""
      throws:

  create_compellent_cluster:
      docstring: |
        Create an PersistenceSystem resource describing a compellent cluster
      in:
        name: ""
        description: ""
        replicas: 1    # default number of replicas - Raid 5, Raid 6, Raid 50
      out:
        persistence_system_id: ""
      throws:
        BadRequest: if object does not have _id or _rev attribute
        NotFound: object with specified id does not exist

  read_persistence_system:
    in:
      persistence_system_id: ""
    out:
      persistence_system: !PersistenceSystem
    throws:
      NotFound: object with specified id does not exist

  delete_persistence_system:
    in:
      persistence_system_id: ""
    out:
    throws:
      NotFound: object with specified id does not exist

  # -----------------
  # Managing Instances in a persistence system

  create_couch_instance:
      docstring: |
        Create an Persistence Instance resource describing a couch instance.
      in:
        name: ""
        description: ""
        host: ""
        port: 5984
        username: ""
        password: ""
        file_system_datastore_id: ""
        persistence_system_id: ""
        config: {}

      out:
        persistence_instance_id: ""
      throws:

  create_elastic_search_instance:
      docstring: |
        Create an Persistence Instance resource describing a couch instance.
      in:
        name: ""
        description: ""
        host: ""
        posrt: 9200
        username: ""
        password: ""
        file_system_datastore_id: ""
        persistence_system_id: ""
        config: {}
      out:
        persistence_instance_id: ""
      throws:

  # does compellent have instances? Add it later...

  read_persistence_instance:
    in:
      persistence_instance_id: ""
    out:
      persistence_instance: !PersistenceInstance
    throws:
      NotFound: object with specified id does not exist

  delete_persistence_instance:
    in:
      persistence_instance_id: ""
    out:
    throws:
      NotFound: object with specified id does not exist



  # -----------------
  # Managing DataStore resources (namespaces in a PersistenceSystem)

  # Used by pyon.datastore.DataStoreManager
  # Connects to database to create namespace

  create_couch_datastore:
      docstring: |
        Create an couch datastore
      in:
        name: ""
        description: ""
        persistence_system_id: ""
        namespace: ""
        replicas: 1       # Integer number of replicas
        partitions: 1     # Integer number of partitions in the database
      out:
        datastore_id: ""

  create_elastic_search_datastore:
      docstring: |
        Create an elastic seach datastore
      in:
        name: ""
        description: ""
        persistence_system_id: ""
        namespace: ""
        replicas: 1       # Integer number of replicas
        shards: 1     # Integer number of partitions in the database
      out:
        datastore_id: ""

  create_file_system_datastore:
      docstring: |
        Create an file system datastore
      in:
        name: ""
        description: ""
        persistent_archive_id: ""
        persistence_system_id: ""
        namespace: ""     # Relative path inside a volume
        replicas: 1   # Integer number of replicas
      out:
        datastore_id: ""

  read_datastore:
    in:
      datastore_id: ""
    out:
      datastore: !DataStore
    throws:
      NotFound: object with specified id does not exist

  delete_datastore:
    in:
      datastore_id: ""
    out:
    throws:
      NotFound: object with specified id does not exist


# Managing Persistent Archive resources (such as a file systems)

  create_persistent_archive:
    docstring: |
      Create an Persistent Archive resource describing the archive and its content.
    in:
      name: ""
      description: ""
      size: 0          # Integer Gigabytes
      device: ""       # Device address
      vfstype: ""      # type of volume
      label: ""        # label to use for fstab
    out:
      archive_id: ""
    throws:
      BadRequest: Invalid arguments

  replicate_persistent_archive:
    docstring: |
      replicate an existing persistent archive and create a new one
    in:
      existing_archive_id:
      # params for new archive - default to existing except for device
      device: ""       # Device address
      vfstype: ""      # type of volume
      label: ""        # Volume label for fstab

  read_persistent_archive:
    in:
      persistent_archive_id: ""
    out:
      persistent_archive: !PersistentArchive
    throws:
      NotFound: object with specified id does not exist

  delete_persistent_archive:
    in:
      persistent_archive_id: ""
    out:
    throws:
      NotFound: object with specified id does not exist

name: agent_management

docstring: |
  The Agent Management Service is the service that manages the Agent Definitions and the running Agents in the system.

spec: https://confluence.oceanobservatories.org/display/syseng/CIAD+COI+OV+Agent+Management+Service

dependencies: [resource_registry]

methods:
  # -----------------
  # Working with Agent definitions

  create_agent_definition:
    docstring: Creates an Agent Definition resource from the parameter AgentDefinition object.
    in:
      agent_definition: !AgentDefinition
    out:
      agent_definition_id: ""
    throws:
      BadRequest: if object passed has _id or _rev attribute

  update_agent_definition:
    docstring: Updates an existing Agent Definition resource.
    in:
      agent_definition: !AgentDefinition
    out:
    throws:
      BadRequest: if object does not have _id or _rev attribute
      NotFound: object with specified id does not exist
      Conflict: object not based on latest persisted object version

  read_agent_definition:
    docstring: Returns an existing Agent Definition resource.
    in:
      agent_definition_id: ""
    out:
      agent_definition: !AgentDefinition
    throws:
      NotFound: object with specified id does not exist

  delete_agent_definition:
    docstring: Deletes an existing Agent Definition resource.
    in:
      agent_definition_id: ""
    out:
    throws:
      NotFound: object with specified id does not exist

  # -----------------
  # Working with Agent instances

  create_agent_instance:
    docstring: Creates an Agent Instance resource from the parameter AgentInstance object.
    in:
      agent_instance: !AgentInstance
    out:
      agent_instance_id: ""
    throws:
      BadRequest: if object passed has _id or _rev attribute

  update_agent_instance:
    docstring: Updates an existing Agent Instance resource.
    in:
      agent_instance: !AgentInstance
    out:
    throws:
      BadRequest: if object does not have _id or _rev attribute
      NotFound: object with specified id does not exist
      Conflict: object not based on latest persisted object version

  read_agent_instance:
    docstring: Returns an existing Agent Instance resource.
    in:
      agent_instance_id: ""
    out:
      agent_instance: !AgentInstance
    throws:
      NotFound: object with specified id does not exist

  delete_agent_instance:
    docstring: Deletes an existing Agent Instance resource.
    in:
      agent_instance_id: ""
    out:
    throws:
      NotFound: object with specified id does not exist


  # -----------------
  # Resource agent interface

  # Governance interface

  negotiate:
    docstring: |
      Initiate a negotiation with this agent. The subject of this negotiation is the given
      ServiceAgreementProposal. The response is either a new ServiceAgreementProposal as counter-offer,
      or the same ServiceAgreementProposal indicating the offer has been accepted.
      NEEDS REFINEMENT.
    in:
      resource_id: ""
      sap_in: !ServiceAgreementProposal
    out:
      sap_out: !ServiceAgreementProposal

  # -----------------
  # Capabilities interface

  get_capabilities:
    docstring: |
      Introspect for agent capabilities.
      @param resource_id The id of the resource agent.
      @param current_state Flag indicating to return capabilities for current
      state only (default True).
      @retval List of AgentCapabilities objects.
    in:
      resource_id: ""
      current_state: True
    out:
      capability_list: []
    throws:

  # -----------------
  # Resource control interface

  execute_resource:
    docstring: |
      Execute command on the resource represented by agent.
      @param resource_id The id of the resource agennt.
      @param command An AgentCommand containing the command.
      @retval result An AgentCommandResult containing the result.
      @throws BadRequest if the command was malformed.
      @throws NotFound if the command is not available in current state.
      @throws ResourceError if the resource produced an error during execution.
    in:
      resource_id: ""
      command: !AgentCommand
    out:
      result: !AgentCommandResult
    throws:
      BadRequest: if the command was malformed.
      NotFound: if the command is not implemented in the agent.
      ResourceError: if the resource produced an error.

  get_resource:
    docstring: |
      Return the value of the given resource parameter.
      @param resource_id The id of the resource agennt.
      @param params A list of parameters names to query.
      @retval A dict of parameter name-value pairs.
      @throws BadRequest if the command was malformed.
      @throws NotFound if the resource does not support the parameter.
    in:
      resource_id: ""
      params: []
    out:
      result: {}
    throws:
      NotFound: if the parameter does not exist.

  set_resource:
    docstring: |
      Set the value of the given resource parameters.
      @param resource_id The id of the resource agennt.
      @param params A dict of resource parameter name-value pairs.
      @throws BadRequest if the command was malformed.
      @throws NotFound if a parameter is not supported by the resource.
      @throws ResourceError if the resource encountered an error while setting
      the parameters.
    in:
      resource_id: ""
      params: {}
    out:
    throws:
      BadRequest: if the command was malformed.
      NotFound: if the parameter does not exist.
      ResourceError: if the resource failed while trying to set the parameter.

  get_resource_state:
    docstring: |
      Return the current resource specific state, if available.
      @param resource_id The id of the resource agennt.
      @retval A str containing the current resource specific state.
    in:
      resource_id: ""
    out:
      result: str
    throws:
      NotFound: if the resource does not utilize a specific state machine.
      ResourceError: if the resource failed while trying to get the state.

  ping_resource:
    docstring: |
      Ping the resource.
      @param resource_id The id of the resource agennt.
      @retval A str containing a string representation of the resource and
      timestamp.
    in:
      resource_id: ""
    out:
      result: str
    throws:

  # -----------------
  # Resource monitor interface

  # -----------------
  # Agent control interface

  execute_agent:
    docstring: |
      Execute command on the agent.
      @param resource_id The id of the resource agennt.
      @param command An AgentCommand containing the command.
      @retval result An AgentCommandResult containing the result.
      @throws BadRequest if the command was malformed.
      @throws NotFound if the command is not available in current state.
    in:
      resource_id: ""
      command: !AgentCommand
    out:
      result: !AgentCommandResult
    throws:
      BadRequest: if the command was malformed.
      NotFound: if the command is not implemented in the agent.

  get_agent:
    docstring: |
      Return the value of the given agent parameters.
      @param resource_id The id of the resource agennt.
      @param params A list of parameters names to query.
      @retval A dict of parameter name-value pairs.
      @throws BadRequest if the command was malformed.
      @throws NotFound if the agent does not support the parameter.
    in:
      resource_id: ""
      params: []
    out:
      result: {}
    throws:
      BadRequest: if the command was malformed.
      NotFound: if the parameter does not exist.

  set_agent:
    docstring: |
      Set the value of the given agent parameters.
      @param resource_id The id of the resource agennt.
      @param params A dict of resource parameter name-value pairs.
      @throws BadRequest if the command was malformed.
      @throws NotFound if a parameter is not supported by the resource.
    in:
      resource_id: ""
      params: {}
    out:
    throws:
      BadRequest: if the command was malformed.
      NotFound: if the parameter does not exist.

  get_agent_state:
    docstring: |
      Return the current resource agent common state.
      @param resource_id The id of the resource agennt.
      @retval A str containing the current agent state.
    in:
      resource_id: ""
    out:
      result: str
    throws:

  ping_agent:
    docstring: |
      Ping the agent.
      @param resource_id The id of the resource agennt.
      @retval A str containing a string representation of the agent
      and a timestamp.
    in:
      resource_id: ""
    out:
      result: str
    throws:

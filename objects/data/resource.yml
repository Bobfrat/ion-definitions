# Place resource specific definitions in here

# Common base type of all resource objects
Resource:
  # _id: ""   - Unique identifier (comes with every object)
  # _rev: ""   - Revision identifier (comes with every object)
  name: ""
  description: ""
  lcstate: "DRAFT_PRIVATE"
  ts_created: ""  # Timestamp str in millis in UNIX epoch
  ts_updated: ""

---

# Information resources are pure information artifacts. Abstract.
InformationResource: !Extends_Resource

---

# Taskable resources are resources with behavior and state. This object describes them. Abstract.
TaskableResource: !Extends_Resource
---

# Executable resources are information resources that can be instantiated into (separate) taskable resources. Abstract.
ExecutableResource: !Extends_InformationResource

---

# Defined a named type of resource
ResourceType: !Extends_InformationResource

ResourceLifeCycle: !Extends_InformationResource
  definition_type: ""
  definition: {}

ResourceFilter:
  filters: {}


---

# The base type for computed attribute objects
ComputedAttributes:

---

# A non-persistable container for a resource and its related data
ResourceContainer:
  _id: ""   #  Unique identifier (matchs the id of the internal persistable resource object)
  ts_created: ""  # Timestamp str in millis in UNIX epoch
  resource: !Resource
  computed: !ComputedAttributes
  ext_associations: {}  # An optional dict of names and associated objects to get other associations on the fly

---

ExtendedResource: !Extends_ResourceContainer
  #@hasPolicy
  policies: []  # A list of any associated policies
  #@hasOwnerInfo
  owners: []  # A list of  owner information of this resource

---

# An object used for testing of the framework
TestExtendedResource: !Extends_ExtendedResource
  #@hasPolicy
  policy_count: 0
  #@Method
  resource_object: !Resource

---

ExtendedInformationResource: !Extends_ExtendedResource

---

ExtendedTaskableResource: !Extends_ExtendedResource


